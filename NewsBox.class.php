<?php
/**
 * Main class for outputting the news box on most skins.
 *
 * @file
 * @ingroup Extensions
 * @author Jack Phoenix
 * @license https://en.wikipedia.org/wiki/Public_domain Public domain
 * @link https://www.mediawiki.org/wiki/Extension:NewsBox Documentation
 * @todo FIXME: epic code duplication between render() and renderForMonaco()
 * @todo FIXME: home page/CW link/forum link should all be rendered via something
 *              like Skin::addToSidebarPlain() so that we could put all of those
 *              into one i18n message and render that message for all skins
 *              instead of fiddling around with stupid switch() loops and whatnot
 */
class NewsBox {
	/**
	 * Prints the news box.
	 *
	 * @param Skin $skin Instance of Skin class or its subclass
	 * @param array $bar
	 */
	public static function render( $skin, &$bar ) {
		global $wgLangToCentralMap;

		$skinName = strtolower( $skin->getSkinName() );

		// Skip Aurora for now, as per discussion with Isarra on 11 January 2014
		// We need to do this here, because otherwise the "ShoutWiki messages"
		// header will be generated by the skin as we can't fool it into not
		// generating that
		// @see /skins/Aurora/Aurora.skin.php, function customBox()
		if ( $skinName == 'aurora' ) {
			return true;
		}

		$contLang = MediaWiki\MediaWikiServices::getInstance()->getContentLanguage();
		$hubURL = !empty( $wgLangToCentralMap[$contLang->getCode()] ) ?
					$wgLangToCentralMap[$contLang->getCode()] :
					'http://www.shoutwiki.com/';

		// Assume site language code by default
		$langCode = $contLang->getCode();

		// Check for user preferences (registered users only)
		$user = $skin->getUser();
		if ( $user->isLoggedIn() ) {
			$langCode = $user->getOption( 'language' );
		}

		// Uselang parameter in URL
		$useLang = $skin->getRequest()->getVal( 'uselang' );
		if ( $useLang && Language::isValidCode( $useLang ) ) {
			$langCode = $useLang;
		}

		// English is a bit of a special case, as we don't want the link to point
		// to [[MediaWiki:Newsbox/en]] or [[MediaWiki:Newsbox/en-gb]] as we will
		// use ShoutWiki Hub's default Newsbox message for English-language wikis
		// as ShoutWiki Hub is an English wiki
		$isEnglish = in_array( $langCode, [ 'en', 'en-ca', 'en-gb' ] );
		if ( $isEnglish ) {
			$message = $skin->msg( 'newsbox' );
		} else {
			$message = $skin->msg( 'newsbox' )->inLanguage( $langCode );
		}

		// Eminence needs extra <span> tags around the link titles and even
		// around the NewsBox content in order not to look overly fugly, whereas
		// BlueCloud requires the ul to have class="navlist" and the <hr />
		// looks bad on BlueCloud so it had to be removed...skins are fun.
		switch ( $skinName ) {
			case 'bluecloud':
				$out = "\t\t" . '<ul class="navlist">
			<li><a href="' . $hubURL . '">' .
				$skin->msg( 'newsbox-homepage' )->plain() .
			'</a></li>
			<li><a href="http://www.shoutwiki.com/wiki/Special:CreateWiki">' .
				$skin->msg( 'newsbox-createwiki' )->plain() .
			'</a></li>';
				$out .= NewsBox::getForumHTML();
				if ( !$message->isBlank() ) {
					$out .= '<li>' . $message->parse() . '</li>';
				}
				$out .= '</ul>';
				break;
			case 'eminence':
				$out = "\t\t" . '<li><a href="' . $hubURL . '"><span>' .
				$skin->msg( 'newsbox-homepage' )->plain() .
			'</span></a></li>
			<li><a href="http://www.shoutwiki.com/wiki/Special:CreateWiki"><span>' .
				$skin->msg( 'newsbox-createwiki' )->plain() .
			'</span></a></li>';
				$out .= NewsBox::getForumHTML();
				if ( !$message->isBlank() ) {
					$out .= "\n<hr />" .
				'<ul>
					<li>
						<span>';
					$out .= $message->parse();
					$out .= '</span>
						</li>
					</ul>';
				}
				break;
			default:
				// This is the generic version that'll work for most skins
				$out = "\t\t" .
			'<ul><li><a href="' . $hubURL . '">' .
				$skin->msg( 'newsbox-homepage' )->plain() .
			'</a></li>
			<li><a href="http://www.shoutwiki.com/wiki/Special:CreateWiki">' .
				$skin->msg( 'newsbox-createwiki' )->plain() .
			'</a></li>' . NewsBox::getForumHTML() .
		'</ul>';
				// If the main NewsBox message has some content, insert a <hr /> after
				// the two SW-related links and show that message's content
				if ( !$message->isBlank() ) {
					$out .= "\n<hr />" .
				'<ul>
					<li>
						<p>';
					$out .= $message->parse();
					$out .= '</p>
					</li>
				</ul>';
				}
				break;
		}

		$title = $skin->msg( 'newsbox-title' )->plain();
		$bar[$title] = $out;
	}

	/**
	 * The Monaco skin is a special case, as it overrides the buildSidebar()
	 * function, which is where SkinBuildSidebar hook is.
	 *
	 * @param SkinMonaco $monaco
	 * @param MonacoTemplate $tpl
	 */
	public static function renderForMonaco( $monaco, $tpl ) {
		global $wgLangToCentralMap;

		$contLang = MediaWiki\MediaWikiServices::getInstance()->getContentLanguage();
		$hubURL = !empty( $wgLangToCentralMap[$contLang->getCode()] ) ?
					$wgLangToCentralMap[$contLang->getCode()] :
					'http://www.shoutwiki.com/';

		// Assume site language code by default
		$langCode = $contLang->getCode();

		// Check for user preferences (registered users only)
		$user = $monaco->getUser();
		if ( $user->isLoggedIn() ) {
			$langCode = $user->getOption( 'language' );
		}

		// Uselang parameter in URL
		$useLang = $monaco->getRequest()->getVal( 'uselang' );
		if ( $useLang && Language::isValidCode( $useLang ) ) {
			$langCode = $useLang;
		}

		// English is a bit of a special case, as we don't want the link to point
		// to [[MediaWiki:Newsbox/en]] or [[MediaWiki:Newsbox/en-gb]] as we will
		// use ShoutWiki Hub's default Newsbox message for English-language wikis
		// as ShoutWiki Hub is an English wiki
		$isEnglish = in_array( $langCode, [ 'en', 'en-ca', 'en-gb' ] );
		if ( $isEnglish ) {
			$message = $monaco->msg( 'newsbox' );
		} else {
			$message = $monaco->msg( 'newsbox' )->inLanguage( $langCode );
		}

		$foo = '';
		if ( !$message->isBlank() ) {
			$foo .= $message->parse();
		}

		echo '<div id="sidebar_2" class="sidebar">
			<dl id="WidgetNewsBox_wg" class="widget WidgetNewsBox">
				<dt id="WidgetNewsBox_header" class="color1 widget_title" style="cursor: default;">' .
					$monaco->msg( 'newsbox-title' )->escaped() .
				'</dt>
			<dd id="WidgetNewsBox_content" class="shadow widget_contents">
				<ul>
					<li><a href="' . $hubURL . '">' .
						$monaco->msg( 'newsbox-homepage' )->escaped() .
					'</a></li>
					<li><a href="http://www.shoutwiki.com/wiki/Special:CreateWiki">' .
						$monaco->msg( 'newsbox-createwiki' )->escaped() .
					'</a></li>' . NewsBox::getForumHTML() .
				'</ul>
				<hr />
				<ul>
					<li>
						<p>' . $foo .
						'</p>
					</li>
				</ul>
			</dd>
		</dl>
	</div>' . "\n";
	}

	/**
	 * Get the HTML that contains the forum link (only if
	 * [[MediaWiki:Newsbox-forum-url]] is non-empty) and the wrapping <li>
	 * element.
	 *
	 * @return string
	 */
	public static function getForumHTML() {
		global $wgOut;

		$skinName = strtolower( $wgOut->getSkin()->getSkinName() );
		$html = '';
		$url = wfMessage( 'newsbox-forum-url' )->inLanguage( 'en' );
		if ( !$url->isDisabled() ) {
			// Eminence needs those fucking <span>s in there
			if ( $skinName == 'eminence' ) {
				// FIXME: Use Html::element() so href attribute will be escaped
				$html = '<li><a href="' . $url->plain() . '"><span>' .
					wfMessage( 'newsbox-forum' )->escaped() . '</span></a></li>' . "\n";
			} else {
				$html = '<li><a href="' . $url->plain() . '">' .
					wfMessage( 'newsbox-forum' )->escaped() . '</a></li>' . "\n";
			}
		}

		return $html;
	}
}